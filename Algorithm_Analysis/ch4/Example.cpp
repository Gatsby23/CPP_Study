//----------------------------------------------------OOP学习方法----------------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/*---------Time.h-----------------------------------------------------------------------------------------------------------------------------------------------------------这个头文件定义了用于处理时间的数据类型Time
基本操作:
	set:			设置时间
	display:		显示时间
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/

/*

#include <iostream>

class Time{
	public:
		***********成员函数***************
		void set(unsigned hours, unsigned minutes, char am_pm);
		//----------------------------------------------------
		//设置一个Time对象的数据成员为一个给定的值
		
		//前置条件: 1 <= hours <= 12.0, 0 <= minutes <= 59, am_pm为'A'或'P'.
		//后置条件: 数据成员myHours, myMinutes和myAMorPM被分别
		//		  设置为hours, minutes,以及am_pm, myMileTime成员被设置为等价的军用格式时间
		//----------------------------------------------------
		
		void dispaly(ostream &out) const;
		//---------------------------------------------------
		//使用输出流out显示标准格式以及军用格式时间
		
		//前置条件: ostream out已经被打开
		//后置条件: 这个Time对象所表示的时间已经被插入到ostream out
		//---------------------------------------------------
	private:
		*************成员函数**************************
		unsigned myHours,
				 myMinutes;
		char myAMorPM;								//'A' or 'P'
		unsigned myMilTime;							//等价的军用格式时间
};	*/

//--------------------------------------------------------------------Time类型,用数据OOP方法实现---------------------------------------------------------------------------

/*
	Time.h中声明的Time类的成员函数的定义,以及在军用格式时间和标准格式时间之间进行转换的工具函数定义
*/

#include<iostream>
using namespace std;

//工具函数->原型
int toMilitary(unsigned hours, unsigned minutes, char am_pm);

//----set函数定义------
void Time::Set(unsigned hours, unsigned minutes, char am_pm){
	//检查类不变式
	if( hours >= 1 && hours <= 12 && minutes >= 0 && minutes <= 59 && (am_pm == 'A' || am_pm == 'P')){
		myHours = hours;
		myMinutes = minutes;
		myAMorPm = am_pm;
		myMilTime = toMilitary(hours, minutes, am_pm);
	}else
		cerr << "*******************Can't set time with these values****************\n";
	//对象的数据成员保持未被改变
}


//---display函数的定义
void Time::display(ostream &out) const{
	out << myHours << ':'
		<< (myMinutes < 10 ? "0" : " ") << myMinutes
		<< ' ' << myAMorPM << ".M. (" << myMilTime << "mil. time)";
}

//工具函数--定义
/*---------------------------------------------------------------------------------------
将标准格式时间转换为军用格式时间

前置条件:	hours, minutes, am_pm满足类不等式
后置条件:	返回等价的军用格式时间
---------------------------------------------------------------------------------------*/
int toMilitary(unsigned hours, unsigned minutes, char am_pm){
	if(hours == 12)
		hours = 0;
	return hours * 100 + minutes + (am_pm == 'P' ? 1200 : 0);
}












